cmake_minimum_required(VERSION 3.27.2)

project(AuxEngine)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)

# Add include directories
include_directories(${PROJECT_SOURCE_DIR}/include)
include_directories(${PROJECT_SOURCE_DIR}/src)

# Collect source files
file(GLOB_RECURSE SOURCES "${PROJECT_SOURCE_DIR}/src/*.cpp")


# ------------------------------------
# Build
# ------------------------------------
if (CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)
    # This is the main project
    add_executable(AuxEngine ${SOURCES})
else()
    # This is a subproject
    add_library(AuxEngine STATIC ${SOURCES})
endif()

# Add include directories to the target
target_include_directories(AuxEngine PRIVATE ${PROJECT_SOURCE_DIR}/include)

target_include_directories(AuxEngine PUBLIC
                           "$<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>"
                           "$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>"
)

target_include_directories(AuxEngine PRIVATE
                           "${PROJECT_SOURCE_DIR}/src"
                           "${CMAKE_BINARY_DIR}/src"
)


# ------------------------------------
# CONFIG
# ------------------------------------
# Define the root directory for config
set(AUXENGINE_CONFIG_DIR "${CMAKE_BINARY_DIR}/config/")

if(EXISTS ${AUXENGINE_CONFIG_DIR})
    # Copy the config directory to the build output directory
    add_custom_command(
        TARGET AuxEngine POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_directory
                ${CMAKE_SOURCE_DIR}/config
                $<TARGET_FILE_DIR:AuxEngine>/config
    )
endif()

target_compile_definitions(AuxEngine PRIVATE AUXENGINE_CONFIG_DIR="${AUXENGINE_CONFIG_DIR}")



# ------------------------------------
# GLFW
# ------------------------------------
set(GLFW_PATH ${PROJECT_SOURCE_DIR}/../glfw)
if(EXISTS ${GLFW_PATH}/CMakeLists.txt)
    add_subdirectory(${GLFW_PATH} ${CMAKE_BINARY_DIR}/glfw)
else()
    include(FetchContent)
    FetchContent_Declare(
        glfw
        GIT_REPOSITORY https://github.com/glfw/glfw.git
        GIT_TAG        3.3.8  # or specific commit
    )
    FetchContent_MakeAvailable(glfw)
endif()


target_link_libraries(AuxEngine PRIVATE 
    glfw
)